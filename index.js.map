{"version":3,"file":"index.js","mappings":"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","sources":["webpack://todo-list/./src/task.js","webpack://todo-list/./src/project.js","webpack://todo-list/./src/index.js"],"sourcesContent":["import {projects, activeProject} from './project';\n\nconst createTodo = function (title, description, dueDate, priority, completed) {\n    return {\n        title,\n        description,\n        dueDate,\n        priority,\n        completed,\n        active: false,\n    };\n};\n\nconst renderTasks = function () {\n    const container = document.querySelector('.task-container');\n    container.innerHTML = '';\n    const taskList = document.querySelector('.task-list');\n    const projTitle = document.querySelector('.proj-name');\n    if (projects.length === 0) {\n        projTitle.textContent = 'No projects to display';\n        taskList.classList.add('hide');\n    } else if (activeProject().todos.length === 0) {\n        // if (projects.length === 1) projects[0].active = true;\n        taskList.textContent = 'No tasks to display';\n        projTitle.textContent = activeProject().title;\n    } else {\n        taskList.classList.remove('hide');\n        taskList.textContent = 'List of Tasks';\n        projTitle.textContent = activeProject().title;\n        for (const [index, todo] of activeProject().todos.entries()) {\n            const div = document.createElement('div');\n            div.classList.add('task');\n            container.append(div);\n            div.innerHTML = `<div>\n                <div class=\"${todo.completed ? 'complete' : 'incomplete'} hover\" data-completed=\"${index}\"></div>\n                <div class=\"title\" ${todo.completed ? 'style=\"text-decoration: line-through\"' : ''}>${todo.title}</div>\n                </div>\n                <div>\n                <button class=\"details hover\" data-detail=\"${index}\">DETAILS</button>\n                <i class=\"fa-solid fa-pencil hover\" data-edit=\"${index}\"></i>\n                <i class=\"fa-solid fa-trash hover\" data-task=\"${index}\"></i>\n                </div>`;\n        }\n    }\n};\n\nconst setTaskListeners = function () {\n    const taskForm = document.querySelector('.task-form');\n    const editForm = document.querySelector('.edit-form');\n    const tasks = document.querySelector('.task-container');\n    const wrapper = document.querySelector('.wrapper');\n    const addBtn = document.querySelector('.add-task');\n\n    addBtn.addEventListener('click', addTask);\n\n    taskForm.addEventListener('submit', createTask);\n\n    editForm.addEventListener('submit', editTask);\n\n    tasks.addEventListener('click', taskOperations);\n\n    wrapper.addEventListener('click', closeDetails);\n};\n\nconst createTask = function (e) {\n    const modal = document.querySelector('#task-dialog');\n    e.preventDefault();\n    const title = document.querySelector('#title').value;\n    const description = document.querySelector('#description').value;\n    const dueDate = document.querySelector('#due-date').value.toString();\n    const priority = document.querySelector('#priority').value;\n    const completed = document.querySelector('#completed').checked;\n    activeProject().todos.push(createTodo(title, description, dueDate, priority, completed));\n    localStorage.setItem('myProjects', JSON.stringify(projects));\n    document.querySelector('#title').value = '';\n    document.querySelector('#description').value = '';\n    document.querySelector('#due-date').value = '';\n    document.querySelector('#priority').value = 'High';\n    document.querySelector('#completed').checked = false;\n    renderTasks();\n    modal.close();\n};\n\n// let activeTask;\n\nconst taskOperations = function (e) {\n    const element = e.target;\n    if (element.classList.contains('fa-trash')) {\n        const taskIndex = element.dataset.task;\n        activeProject().todos.splice(taskIndex, 1);\n        localStorage.setItem('myProjects', JSON.stringify(projects));\n        renderTasks();\n    } else if (element.classList.contains('fa-pencil')) {\n        const todoIndex = element.dataset.edit;\n        activeProject().todos[todoIndex].active = true;\n        const modal = document.querySelector('#edit-dialog');\n        modal.showModal();\n        const todo = activeProject().todos[todoIndex];\n        document.querySelector('input#edit-title').value = todo.title;\n        document.querySelector('textarea#edit-description').value = todo.description;\n        document.querySelector('input#edit-due-date').value = todo.dueDate;\n        document.querySelector('select#edit-priority').value = todo.priority;\n        document.querySelector('input#edit-completed').checked = todo.completed;\n    } else if (element.classList.contains('details')) {\n        const wrapper = document.querySelector('.wrapper');\n        const detailsWindow = document.createElement('div');\n        detailsWindow.classList.add('task-details');\n        wrapper.append(detailsWindow);\n        const todoIndex = element.dataset.detail;\n        const todo = activeProject().todos[todoIndex];\n        const leftPanel = document.querySelector('.left');\n        const mainApp = document.querySelector('.main');\n        leftPanel.setAttribute('style', 'filter: blur(20px)');\n        mainApp.setAttribute('style', 'filter: blur(20px)');\n        detailsWindow.innerHTML = `<div class=\"close-details\">x</div>\n            <div><h4>Title:</h4>${todo.title}</div>\n            <div><h4>Priority:</h4>${todo.priority}</div>\n            <div><h4>Due Date:</h4>${todo.dueDate}</div>\n            <div><h4>Description:</h4>${todo.description}</div>`;\n    } else if (element.classList.contains('incomplete') || element.classList.contains('complete')) {\n        const todoIndex = element.dataset.completed;\n        const todo = activeProject().todos[todoIndex];\n        if (todo.completed) todo.completed = false;\n        else todo.completed = true;\n        localStorage.setItem('myProjects', JSON.stringify(projects));\n        renderTasks();\n    }\n};\n\nconst closeDetails = function (e) {\n    const element = e.target;\n    if (element.classList.contains('close-details')) {\n        const detailsWindow = document.querySelector('.task-details');\n        detailsWindow.remove();\n        const leftPanel = document.querySelector('.left');\n        const mainApp = document.querySelector('.main');\n        leftPanel.setAttribute('style', 'filter: initial');\n        mainApp.setAttribute('style', 'filter: initial');\n    }\n};\n\nconst editTask = function (e) {\n    e.preventDefault();\n    const modal = document.querySelector('#edit-dialog');\n    const activeTask = activeProject().todos[activeProject().todos.findIndex(x => x.active === true)];\n    activeTask.title = document.querySelector('input#edit-title').value;\n    activeTask.description = document.querySelector('textarea#edit-description').value;\n    activeTask.dueDate = document.querySelector('input#edit-due-date').value;\n    activeTask.priority = document.querySelector('select#edit-priority').value;\n    activeTask.completed = document.querySelector('input#edit-completed').checked;\n    activeTask.active = false;\n    localStorage.setItem('myProjects', JSON.stringify(projects));\n    modal.close();\n    renderTasks();\n};\n\nconst addTask = function (e) {\n    const modal = document.querySelector('#task-dialog');\n    if (projects.length !== 0) modal.showModal();\n    else alert('Please add a project first');\n};\n\nexport {createTodo, renderTasks, setTaskListeners};\n","import {renderTasks, createTodo} from './task';\n\nconst projects = JSON.parse(localStorage.getItem('myProjects')) || [];\n\nconst createProject = function (title) {\n    return {title, active: true, todos: []};\n};\n\nconst renderProjects = function () {\n    const projContainer = document.querySelector('.projects');\n    projContainer.innerHTML = '';\n    for (const [index, project] of projects.entries()) {\n        const div = document.createElement('div');\n        projContainer.append(div);\n        div.classList.add('project');\n        div.innerHTML = `${project.title}<div>\n            <button class=\"proj-delete\">Delete</button>\n            <button class=\"rename\" data-rename=\"${index}\">Rename</button></div>`;\n    }\n};\n\nconst setProjectListeners = function () {\n    const addBtn = document.querySelector('.add-project');\n    const projForm = document.querySelector('.new-proj-form');\n    const projects = document.querySelector('.projects');\n    const renameForm = document.querySelector('form.proj-rename');\n\n    addBtn.addEventListener('click', showProjectForm);\n\n    projForm.addEventListener('submit', createNewProject);\n\n    projects.addEventListener('click', projectsOps);\n\n    renameForm.addEventListener('submit', projRenameForm);\n};\n\nconst showProjectForm = function (e) {\n    const modal = document.querySelector('#proj-dialog');\n    modal.showModal();\n};\n\nconst createNewProject = function (e) {\n    const modal = document.querySelector('#proj-dialog');\n    e.preventDefault();\n    const projectTitle = document.querySelector('#project-title').value;\n    if (projectTitle !== '') {\n        if (projects.length !== 0) activeProject().active = false;\n        const newProj = createProject(projectTitle);\n        projects.push(newProj);\n        localStorage.setItem('myProjects', JSON.stringify(projects));\n        renderProjects();\n        renderTasks();\n        modal.close();\n    }\n};\n\nconst projectsOps = function (e) {\n    const element = e.target;\n    if (element.classList.contains('project')) {\n        projects[projects.findIndex(x => x.active === true)].active = false;\n        projects[projects.findIndex(x => x.title === element.firstChild.textContent)].active = true;\n        renderTasks();\n    }\n    if (element.classList.contains('proj-delete')) {\n        const projectIndex = projects.findIndex(x => x.title === element.closest('.project').firstChild.textContent);\n        projects.splice(projectIndex, 1);\n        if (projects.length === 1) projects[0].active = true;\n        localStorage.setItem('myProjects', JSON.stringify(projects));\n        renderProjects();\n        renderTasks();\n    }\n    if (element.classList.contains('rename')) {\n        activeProject().active = false;\n        const projIndex = element.dataset.rename;\n        const project = projects[projIndex];\n        project.active = true;\n        const form = document.querySelector('.proj-rename');\n        form.classList.remove('hide');\n        document.querySelector('input#proj-rename').value = project.title;\n    }\n};\n\nconst projRenameForm = function (e) {\n    const renameForm = document.querySelector('form.proj-rename');\n    e.preventDefault();\n    renameForm.classList.add('hide');\n    activeProject().title = document.querySelector('input#proj-rename').value;\n    localStorage.setItem('myProjects', JSON.stringify(projects));\n    renderProjects();\n};\n\nconst addDummyProject = function () {\n    if (projects.length === 0) {\n        const sampleProj = createProject('Sample');\n        projects.push(sampleProj);\n        const sampleTodo = createTodo('Sample task', 'none', new Date().toISOString().split('T')[0], 'High', false);\n        sampleProj.todos.push(sampleTodo);\n        renderTasks();\n    }\n};\n\nconst activeProject = function () {\n    if (projects.length === 0) return;\n    if (projects.length === 1) projects[0].active = true;\n    if (projects.length > 1 && projects[projects.findIndex(x => x.active === true)] === undefined)\n        projects[0].active = true;\n    return projects[projects.findIndex(x => x.active === true)];\n};\n\nexport {projects, createProject, renderProjects, activeProject, addDummyProject, setProjectListeners};\n","import {renderProjects, addDummyProject, setProjectListeners} from './project';\n\nimport {renderTasks, setTaskListeners} from './task';\n\naddDummyProject();\nrenderTasks();\nsetProjectListeners();\nsetTaskListeners();\nrenderProjects();\n"],"names":["createTodo","title","description","dueDate","priority","completed","active","renderTasks","container","document","querySelector","innerHTML","taskList","projTitle","projects","length","textContent","classList","add","activeProject","todos","remove","index","todo","entries","div","createElement","append","createTask","e","modal","preventDefault","value","toString","checked","push","localStorage","setItem","JSON","stringify","close","taskOperations","element","target","contains","taskIndex","dataset","task","splice","todoIndex","edit","showModal","wrapper","detailsWindow","detail","leftPanel","mainApp","setAttribute","closeDetails","editTask","activeTask","findIndex","x","addTask","alert","parse","getItem","createProject","renderProjects","projContainer","project","showProjectForm","createNewProject","projectTitle","newProj","projectsOps","firstChild","projectIndex","closest","projIndex","rename","projRenameForm","renameForm","undefined","sampleProj","sampleTodo","Date","toISOString","split","addDummyProject","addBtn","projForm","addEventListener","setProjectListeners","taskForm","editForm","tasks","setTaskListeners"],"sourceRoot":""}