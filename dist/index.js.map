{"version":3,"file":"index.js","mappings":"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","sources":["webpack://todo-list/./src/task.js","webpack://todo-list/./src/project.js","webpack://todo-list/./src/index.js"],"sourcesContent":["import {projects, activeProject} from './project';\n\nconst createTodo = function (title, description, dueDate, priority, completed) {\n    return {\n        title,\n        description,\n        dueDate,\n        priority,\n        completed,\n        active: false,\n    };\n};\n\nconst addDummyTask = function () {\n    const container = document.querySelector('.task-container');\n    if (activeProject().todos.length === 0) {\n        const sample = createTodo('Create pseudocode', 'none', new Date().toISOString().split('T')[0], 'High', false);\n        activeProject().todos.push(sample);\n        renderTask();\n    }\n};\n\nconst renderTask = function () {\n    const container = document.querySelector('.task-container');\n    container.innerHTML = '';\n    console.log(projects);\n    const taskList = document.querySelector('.task-list');\n    if (activeProject().todos.length === 0) taskList.textContent = 'No tasks to display';\n    else {\n        taskList.textContent = 'List of Tasks';\n        const projTitle = document.querySelector('.proj-name');\n        projTitle.textContent = activeProject().title;\n        console.log(activeProject().todos);\n        for (const [index, todo] of activeProject().todos.entries()) {\n            const div = document.createElement('div');\n            div.classList.add('task');\n            container.append(div);\n            div.innerHTML = `<div>\n                <div class=\"${todo.completed ? 'complete' : 'incomplete'} hover\" data-completed=\"${index}\"></div>\n                <div class=\"title\" ${todo.completed ? 'style=\"text-decoration: line-through\"' : ''}>${todo.title}</div>\n                </div>\n                <div>\n                <button class=\"details hover\" data-detail=\"${index}\">DETAILS</button>\n                <i class=\"fa-solid fa-pencil hover\" data-edit=\"${index}\"></i>\n                <i class=\"fa-solid fa-trash hover\" data-task=\"${index}\"></i>\n                </div>`;\n        }\n    }\n};\n\nconst taskForm = function () {\n    const modal = document.querySelector('#task-dialog');\n    const form = document.querySelector('.task-form');\n    form.addEventListener('submit', e => {\n        e.preventDefault();\n        const title = document.querySelector('#title').value;\n        const description = document.querySelector('#description').value;\n        const dueDate = document.querySelector('#due-date').value.toString();\n        const priority = document.querySelector('#priority').value;\n        const completed = document.querySelector('#completed').checked ? true : false;\n        activeProject().todos.push(createTodo(title, description, dueDate, priority, completed));\n        localStorage.setItem('myProjects', JSON.stringify(projects));\n        renderTask();\n        modal.close();\n        console.log(dueDate);\n    });\n};\n\nlet activeTask;\n\nconst taskOpBtns = function () {\n    const taskCont = document.querySelector('.task-container');\n    taskCont.addEventListener('click', e => {\n        const element = e.target;\n        if (element.classList.contains('fa-trash')) {\n            const taskIndex = element.dataset.task;\n            activeProject().todos.splice(taskIndex, 1);\n            localStorage.setItem('myProjects', JSON.stringify(projects));\n            renderTask();\n        } else if (element.classList.contains('fa-pencil')) {\n            activeTask = element.dataset.edit;\n            activeProject().todos[activeTask].active = true;\n            const modal = document.querySelector('#edit-dialog');\n            modal.showModal();\n            document.querySelector('input#edit-title').value = activeProject().todos[activeTask].title;\n            document.querySelector('textarea#edit-description').value = activeProject().todos[activeTask].description;\n            document.querySelector('input#edit-due-date').value = activeProject().todos[activeTask].dueDate;\n            document.querySelector('select#edit-priority').value = activeProject().todos[activeTask].priority;\n            document.querySelector('input#edit-completed').value = activeProject().todos[activeTask].completed;\n        } else if (element.classList.contains('details')) {\n            const mainApp = document.querySelector('.main');\n            const detailsWindow = document.createElement('div');\n            detailsWindow.classList.add('task-details');\n            mainApp.append(detailsWindow);\n            const todoIndex = element.dataset.detail;\n            const todo = activeProject().todos[todoIndex];\n            detailsWindow.innerHTML = `<div class=\"close-details\">x</div>\n                <div><h4>Title:</h4>${todo.title}</div>\n                <div><h4>Priority:</h4>${todo.priority}</div>\n                <div><h4>Due Date:</h4>${todo.dueDate}</div>\n                <div><h4>Description:</h4>${todo.description}</div>`;\n        } else if (element.classList.contains('incomplete') || element.classList.contains('complete')) {\n            const todoIndex = element.dataset.completed;\n            const todo = activeProject().todos[todoIndex];\n            if (todo.completed) todo.completed = false;\n            else todo.completed = true;\n            // todo.completed ? (todo.completed = false) : (todo.completed = true);\n            localStorage.setItem('myProjects', JSON.stringify(projects));\n            renderTask();\n        }\n    });\n};\n\nconst closeDetails = function () {\n    const mainApp = document.querySelector('.main');\n    mainApp.addEventListener('click', e => {\n        const element = e.target;\n        if (element.classList.contains('close-details')) {\n            const detailsWindow = document.querySelector('.task-details');\n            detailsWindow.remove();\n        }\n    });\n};\n\nconst editForm = function () {\n    const form = document.querySelector('.edit-form');\n    const modal = document.querySelector('#edit-dialog');\n    form.addEventListener('submit', e => {\n        e.preventDefault();\n        activeTask = activeProject().todos[activeProject().todos.findIndex(x => x.active === true)];\n        activeTask.title = document.querySelector('input#edit-title').value;\n        activeTask.description = document.querySelector('textarea#edit-description').value;\n        activeTask.dueDate = document.querySelector('input#edit-due-date').value;\n        activeTask.priority = document.querySelector('select#edit-priority').value;\n        activeTask.completed = document.querySelector('input#edit-completed').value;\n        activeTask.active = false;\n        localStorage.setItem('myProjects', JSON.stringify(projects));\n        modal.close();\n        renderTask();\n    });\n};\n\nconst addTaskBtn = function () {\n    const addBtn = document.querySelector('.add-task');\n    const modal = document.querySelector('dialog');\n    addBtn.addEventListener('click', function () {\n        modal.showModal();\n    });\n};\n\nexport {createTodo, addDummyTask, renderTask, taskForm, taskOpBtns, editForm, addTaskBtn, closeDetails};\n","import {renderTask, addDummyTask} from './task';\n\nconst projects = JSON.parse(localStorage.getItem('myProjects')) || [];\n\nconst createProject = function (title) {\n    return {title, active: true, todos: []};\n};\n\nconst renderProjects = function () {\n    const projContainer = document.querySelector('.projects');\n    projContainer.innerHTML = '';\n    for (const [index, project] of projects.entries()) {\n        const div = document.createElement('div');\n        projContainer.append(div);\n        div.classList.add('project');\n        div.innerHTML = `${project.title}<div>\n            <button class=\"proj-delete\">Delete</button>\n            <button class=\"rename\" data-rename=\"${index}\">Rename</button></div>`;\n    }\n};\n\nconst newProjectBtn = function () {\n    const projForm = document.querySelector('.new-proj-form');\n    projForm.addEventListener('submit', function (e) {\n        e.preventDefault();\n        const projectTitle = document.querySelector('#project-title').value;\n        if (projectTitle !== '') {\n            activeProject().active = false;\n\n            const newProj = createProject(projectTitle);\n            projects.push(newProj);\n            localStorage.setItem('myProjects', JSON.stringify(projects));\n            renderProjects();\n            addDummyTask();\n            renderTask();\n        }\n    });\n};\n\nconst projectsListener = function () {\n    const projectsCont = document.querySelector('.projects');\n    projectsCont.addEventListener('click', function (e) {\n        const element = e.target;\n        if (element.classList.contains('project')) {\n            projects[projects.findIndex(x => x.active === true)].active = false;\n            projects[projects.findIndex(x => x.title === element.firstChild.textContent)].active = true;\n            renderTask();\n        }\n        if (element.classList.contains('proj-delete')) {\n            projects.splice(element.closest('.project').firstChild.textContent, 1);\n            renderProjects();\n            renderTask();\n        }\n        if (element.classList.contains('rename')) {\n            activeProject().active = false;\n            const projIndex = element.dataset.rename;\n            const project = projects[projIndex];\n            project.active = true;\n            const form = document.querySelector('.proj-rename');\n            form.classList.remove('hide');\n            document.querySelector('input#proj-rename').value = project.title;\n            // const div = document.createElement('div');\n            // wrapper.append(div);\n            // div.innerHTML = `<form action=\"\" class=\"proj-rename\">\n            //     <input type=\"text\" id=\"proj-rename\" name=\"proj-name\" value=\"${project.title}\"/>\n            //     <button type=\"submit\" id=\"proj-rename\">Rename</button>\n            //     </form>`;\n            // renderProjects();\n        }\n    });\n};\n\nconst projRename = function () {\n    const form = document.querySelector('form.proj-rename');\n    form.addEventListener('submit', e => {\n        e.preventDefault();\n        form.classList.add('hide');\n        activeProject().title = document.querySelector('input#proj-rename').value;\n        localStorage.setItem('myProjects', JSON.stringify(projects));\n        renderProjects();\n    });\n};\n\nconst addDummyProject = function () {\n    if (projects.length === 0) {\n        const proj1 = createProject('Sample');\n        projects.push(proj1);\n    }\n};\n\nconst activeProject = function () {\n    return projects[projects.findIndex(x => x.active === true)];\n};\n\nexport {\n    projects,\n    createProject,\n    renderProjects,\n    newProjectBtn,\n    projectsListener,\n    activeProject,\n    addDummyProject,\n    projRename,\n};\n","import {\n    projects,\n    createProject,\n    renderProjects,\n    newProjectBtn,\n    projectsListener,\n    activeProject,\n    addDummyProject,\n    projRename,\n} from './project';\n\nimport {addDummyTask, renderTask, taskForm, taskOpBtns, editForm, addTaskBtn, closeDetails} from './task';\n\n// sample task and project\n// const task1 = {\n//     title: 'title',\n//     description: 'none',\n//     dueDate: '11 / 11 / 2023',\n//     priority: 'High',\n//     completed: 'false',\n// };\n\n// proj1.todos.push(task1);\n\n// const proj2 = createProject('proj2');\n// projects.push(proj2);\naddDummyProject();\ntaskOpBtns();\ntaskForm();\nrenderTask();\naddTaskBtn();\ncloseDetails();\n\n// console.log(proj1.todos.findIndex(x => x.title === 'first'));\n\nprojectsListener();\nprojRename();\nnewProjectBtn();\nrenderProjects();\naddDummyTask();\neditForm();\n"],"names":["createTodo","title","description","dueDate","priority","completed","active","addDummyTask","document","querySelector","activeProject","todos","length","sample","Date","toISOString","split","push","renderTask","container","innerHTML","console","log","projects","taskList","textContent","index","todo","entries","div","createElement","classList","add","append","activeTask","JSON","parse","localStorage","getItem","createProject","renderProjects","projContainer","project","findIndex","x","proj1","addDummyProject","addEventListener","e","element","target","contains","taskIndex","dataset","task","splice","setItem","stringify","edit","showModal","value","mainApp","detailsWindow","todoIndex","detail","modal","preventDefault","toString","checked","close","taskForm","addBtn","addTaskBtn","remove","firstChild","closest","projIndex","rename","form","projRename","projectTitle","newProj","editForm"],"sourceRoot":""}